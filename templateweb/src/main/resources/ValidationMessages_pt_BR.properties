###
# #%L
# %%
# Copyright (C) 2015 - 2016 Thiago Gutenberg Carvalho da Costa.
# %%
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# 3. Neither the name of the Thiago Gutenberg Carvalho da Costa. nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
# #L%
###
javax.validation.constraints.AssertFalse.message = deve ser falso
javax.validation.constraints.AssertTrue.message  = deve ser verdadeiro
javax.validation.constraints.DecimalMax.message  = deve ser menor ou igual a {value}
javax.validation.constraints.DecimalMin.message  = deve ser maior ou igual a {value}
javax.validation.constraints.Digits.message      = valor num\u00e9rico fora do limite (<{integer} d\u00edgitos>.<{fraction} d\u00edgitos> esperado)
javax.validation.constraints.Future.message      = deve estar no futuro
javax.validation.constraints.Max.message         = deve ser menor ou igual a {value}
javax.validation.constraints.Min.message         = deve ser maior ou igual a {value}
javax.validation.constraints.NotNull.message     = n\u00e3o pode ser nulo
javax.validation.constraints.Null.message        = deve ser nulo
javax.validation.constraints.Past.message        = deve estar no passado
javax.validation.constraints.Pattern.message     = deve corresponder \u00e0 "{regexp}"
javax.validation.constraints.Size.message        = tamanho deve estar entre {min} e {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = N\u00famero de Cart\u00e3o de Cr\u00e9dito inv\u00e1lido
org.hibernate.validator.constraints.EAN.message                     = Inv\u00e1lido {type} de c\u00F3digo de barras
org.hibernate.validator.constraints.Email.message                   = N\u00e3o \u00e9 um endere\u00e7o de e-mail
org.hibernate.validator.constraints.Length.message                  = Tamanho deve estar entre {min} e {max}
org.hibernate.validator.constraints.LuhnCheck.message               = Digito verificador para ${value} \u00e9 inv\u00e1lido, verifica\u00e7\u00e3o M\u00f3dulo 10 de Luhn falhou
org.hibernate.validator.constraints.Mod10Check.message              = Digito verificador para ${value} \u00e9 inv\u00e1lido, verifica\u00e7\u00e3o M\u00f3dulo 10 falhou
org.hibernate.validator.constraints.Mod11Check.message              = Digito verificador para ${value} \u00e9 inv\u00e1lido, verifica\u00e7\u00e3o M\u00f3dulo 10 falhou
org.hibernate.validator.constraints.ModCheck.message                = Digito verificador para ${value} \u00e9 inv\u00e1lido, verifica\u00e7\u00e3o ${modType} falhou
org.hibernate.validator.constraints.NotBlank.message                = N\u00e3o pode estar em branco
org.hibernate.validator.constraints.NotEmpty.message                = N\u00e3o pode estar vazio
org.hibernate.validator.constraints.ParametersScriptAssert.message  = Express\u00E3o script "{script}" n\u00E3o foi avaliado como verdadeiro
org.hibernate.validator.constraints.Range.message                   = O valor precisa estar entre {min} e {max}
org.hibernate.validator.constraints.SafeHtml.message                = Pode ter conte\u00fado inseguro no html
org.hibernate.validator.constraints.ScriptAssert.message            = Express\u00e3o de script "{script}" n\u00e3o retornou verdadeiro
org.hibernate.validator.constraints.URL.message                     = Deve ser uma URL v\u00e1lida
org.hibernate.validator.constraints.br.CNPJ.message                 = CNPJ inv\u00e1lido
org.hibernate.validator.constraints.br.CPF.message                  = CPF inv\u00e1lido
org.hibernate.validator.constraints.br.TituloEleitoral.message      = T\u00edtulo Eleitoral inv\u00e1lido

NotBlank.usuario.nome = O nome n\u00e3o pode estar em branco
NotNull.usuario.idade = A idade n\u00e3o pode ser nula
Digits.usuario.idade  = A idade est\u00e1 fora do limite (<{integer} d\u00edgitos>.<{fraction} d\u00edgitos> esperado)
Email.usuario.email   = O email n\u00e3o \u00e9 um endere\u00e7o v\u00e1lido
NotBlank.usuario.email = O email n\u00e3o pode estar em branco
